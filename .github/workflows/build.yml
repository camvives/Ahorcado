name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis 
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        # if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
            #    New-Item -Path .\.sonar\scanner -ItemType Directory
      #    dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          $DebugPreference = "Continue"
          Write-Debug "Tool Install:"          
          dotnet tool install --global dotnet-coverage
          
          Write-Debug "DotNet SonarScanner"
          dotnet sonarscanner begin /k:"camvives_Ahorcado" /o:"camvives" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          
          Write-Debug "DotNet Build"
          dotnet build --no-incremental
          
          Write-Debug "DotNet Coverage"
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          
          Write-Debug "Folder:"
          ls
          
          Write-Debug "DotNet SonarScanner"
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
          Write-Debug "DotNet SonarScanner Begin"
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"camvives_Ahorcado" /o:"camvives" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          
          Write-Debug "DotNet Build"
          dotnet build
          
          Write-Debug "DotNet SonarScanner End"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
